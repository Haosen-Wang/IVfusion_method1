Epoch 1/2:  19%|█████████████▎                                                         | 28/150 [00:02<00:05, 22.00it/s]
当前学习率: 0.001000
⚠️  批次 0 检测到 NaN/Inf 损失，跳过此批次...
损失详情: {'total_loss_f': tensor(nan, device='cuda:1', grad_fn=<AddBackward0>), 'pixel_loss': tensor(nan, device='cuda:1', grad_fn=<MeanBackward0>), 'gradient_loss': tensor(nan, device='cuda:1', grad_fn=<MeanBackward0>), 'perceptual_loss': tensor(nan, device='cuda:1', grad_fn=<MeanBackward0>), 'total_loss_vi': tensor(nan, device='cuda:1', grad_fn=<MulBackward0>), 'rec_n': tensor(5.5452, device='cuda:1'), 'kl_loss_n': tensor(nan, device='cuda:1', grad_fn=<MulBackward0>), 'total_loss': tensor(nan, device='cuda:1', grad_fn=<AddBackward0>)}
⚠️  批次 1 内存不足，跳过...
⚠️  批次 2 内存不足，跳过...
⚠️  批次 3 内存不足，跳过...
⚠️  批次 4 内存不足，跳过...
⚠️  批次 5 内存不足，跳过...
⚠️  批次 6 内存不足，跳过...
⚠️  批次 7 内存不足，跳过...
⚠️  批次 8 内存不足，跳过...
⚠️  批次 9 内存不足，跳过...
⚠️  批次 10 内存不足，跳过...
⚠️  批次 11 内存不足，跳过...
⚠️  批次 12 内存不足，跳过...
⚠️  批次 13 内存不足，跳过...
⚠️  批次 14 内存不足，跳过...
⚠️  批次 15 内存不足，跳过...
⚠️  批次 16 内存不足，跳过...
⚠️  批次 17 内存不足，跳过...
⚠️  批次 18 内存不足，跳过...
⚠️  批次 19 内存不足，跳过...
⚠️  批次 20 内存不足，跳过...
⚠️  批次 21 内存不足，跳过...
⚠️  批次 22 内存不足，跳过...
⚠️  批次 23 内存不足，跳过...
⚠️  批次 24 内存不足，跳过...
⚠️  批次 25 内存不足，跳过...
⚠️  批次 26 内存不足，跳过...
⚠️  批次 27 内存不足，跳过...
⚠️  批次 28 内存不足，跳过...
⚠️  批次 29 内存不足，跳过...
⚠️  批次 30 内存不足，跳过...
⚠️  批次 31 内存不足，跳过...
⚠️  批次 32 内存不足，跳过...
⚠️  批次 33 内存不足，跳过...
⚠️  批次 34 内存不足，跳过...
⚠️  批次 35 内存不足，跳过...
⚠️  批次 36 内存不足，跳过...
⚠️  批次 37 内存不足，跳过...
⚠️  批次 38 内存不足，跳过...
⚠️  批次 39 内存不足，跳过...
⚠️  批次 40 内存不足，跳过...
⚠️  批次 41 内存不足，跳过...
⚠️  批次 42 内存不足，跳过...
⚠️  批次 43 内存不足，跳过...
⚠️  批次 44 内存不足，跳过...
⚠️  批次 45 内存不足，跳过...
⚠️  批次 46 内存不足，跳过...
⚠️  批次 47 内存不足，跳过...
⚠️  批次 48 内存不足，跳过...
⚠️  批次 49 内存不足，跳过...
⚠️  批次 50 内存不足，跳过...
⚠️  批次 51 内存不足，跳过...
⚠️  批次 52 内存不足，跳过...
⚠️  批次 53 内存不足，跳过...
⚠️  批次 54 内存不足，跳过...
⚠️  批次 55 内存不足，跳过...
⚠️  批次 56 内存不足，跳过...
⚠️  批次 57 内存不足，跳过...
⚠️  批次 58 内存不足，跳过...
⚠️  批次 59 内存不足，跳过...
⚠️  批次 60 内存不足，跳过...
⚠️  批次 61 内存不足，跳过...
⚠️  批次 62 内存不足，跳过...
⚠️  批次 63 内存不足，跳过...
⚠️  批次 64 内存不足，跳过...
⚠️  批次 65 内存不足，跳过...
⚠️  批次 66 内存不足，跳过...
⚠️  批次 67 内存不足，跳过...
⚠️  批次 68 内存不足，跳过...
⚠️  批次 69 内存不足，跳过...
⚠️  批次 70 内存不足，跳过...
⚠️  批次 71 内存不足，跳过...
⚠️  批次 72 内存不足，跳过...
⚠️  批次 73 内存不足，跳过...
⚠️  批次 74 内存不足，跳过...
⚠️  批次 75 内存不足，跳过...
⚠️  批次 76 内存不足，跳过...
⚠️  批次 77 内存不足，跳过...
⚠️  批次 78 内存不足，跳过...
⚠️  批次 79 内存不足，跳过...
⚠️  批次 80 内存不足，跳过...
⚠️  批次 81 内存不足，跳过...
⚠️  批次 82 内存不足，跳过...
⚠️  批次 83 内存不足，跳过...
⚠️  批次 84 内存不足，跳过...
⚠️  批次 85 内存不足，跳过...
⚠️  批次 86 内存不足，跳过...
⚠️  批次 87 内存不足，跳过...
⚠️  批次 88 内存不足，跳过...
⚠️  批次 89 内存不足，跳过...
⚠️  批次 90 内存不足，跳过...
⚠️  批次 91 内存不足，跳过...
⚠️  批次 92 内存不足，跳过...
⚠️  批次 93 内存不足，跳过...
⚠️  批次 94 内存不足，跳过...
⚠️  批次 95 内存不足，跳过...
Traceback (most recent call last):
  File "/home/user/1024_whs/IVfusion_method1/model/stage1/train_dc.py", line 657, in <module>
    main(**config_dic)
  File "/home/user/1024_whs/IVfusion_method1/model/stage1/train_dc.py", line 544, in main
    best_epoch, best_loss = train_model(
                            ^^^^^^^^^^^^
  File "/home/user/1024_whs/IVfusion_method1/model/stage1/train_dc.py", line 242, in train_model
    epoch_loss = train_epoch_model(model, train_loader, criterion, optimizer, device_1, device_2, val_loader, pbar)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/user/1024_whs/IVfusion_method1/model/stage1/train_dc.py", line 145, in train_epoch_model
    for batch_idx, (d_image, c_image) in enumerate(pbar):
  File "/opt/conda/lib/python3.11/site-packages/tqdm/std.py", line 1181, in __iter__
    for obj in iterable:
  File "/opt/conda/lib/python3.11/site-packages/torch/utils/data/dataloader.py", line 729, in __next__
    with torch.autograd.profiler.record_function(self._profile_name):
  File "/opt/conda/lib/python3.11/site-packages/torch/autograd/profiler.py", line 771, in __enter__
    self.record = torch.ops.profiler._record_function_enter_new(
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/conda/lib/python3.11/site-packages/torch/_ops.py", line 1158, in __call__
    return self._op(*args, **(kwargs or {}))
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
KeyboardInterrupt
